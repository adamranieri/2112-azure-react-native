{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport axios from \"axios\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function BookView() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      books = _useState2[0],\n      setBooks = _useState2[1];\n\n  function getBooks() {\n    var response, myBooks;\n    return _regeneratorRuntime.async(function getBooks$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(axios.get(\"http://8c58-50-110-89-213.ngrok.io/books\"));\n\n          case 2:\n            response = _context.sent;\n            myBooks = response.data;\n            setBooks(myBooks);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    getBooks();\n  }, []);\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      data: books,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return BookItem(item);\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      }\n    })\n  });\n}\n\nfunction BookItem(props) {\n  return _jsx(View, {\n    children: _jsxs(Text, {\n      children: [\" Title \", props.title, \" Author \", props.author]\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/AdamRanieri/Desktop/native/pleasantview/components/book-view.tsx"],"names":["useEffect","useState","axios","BookView","books","setBooks","getBooks","get","response","myBooks","data","item","BookItem","id","props","title","author"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;;AAGA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,SAASC,QAAT,GAAmB;AAE9B,kBAA0BF,QAAQ,CAAS,EAAT,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AAQA,WAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC2BJ,KAAK,CAACK,GAAN,CAAU,0CAAV,CAD3B;;AAAA;AACUC,YAAAA,QADV;AAEUC,YAAAA,OAFV,GAEoBD,QAAQ,CAACE,IAF7B;AAGIL,YAAAA,QAAQ,CAACI,OAAD,CAAR;;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMAT,EAAAA,SAAS,CAAC,YAAI;AACVM,IAAAA,QAAQ;AAEX,GAHQ,EAGN,EAHM,CAAT;AAOA,SAAO,KAAC,IAAD;AAAA,cACH,KAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,KAAhB;AAAuB,MAAA,UAAU,EAAE;AAAA,YAAEO,IAAF,QAAEA,IAAF;AAAA,eAAUC,QAAQ,CAACD,IAAD,CAAlB;AAAA,OAAnC;AAA6D,MAAA,YAAY,EAAE,sBAAAA,IAAI;AAAA,eAAIA,IAAI,CAACE,EAAT;AAAA;AAA/E;AADG,IAAP;AAGH;;AAED,SAASD,QAAT,CAAkBE,KAAlB,EAA6B;AAEzB,SAAO,KAAC,IAAD;AAAA,cACH,MAAC,IAAD;AAAA,4BAAcA,KAAK,CAACC,KAApB,cAAmCD,KAAK,CAACE,MAAzC;AAAA;AADG,IAAP;AAGH","sourcesContent":["import { useEffect, useState } from \"react\"\r\nimport { View,Text, FlatList } from \"react-native\"\r\nimport { Book } from \"../dtos/dtos\"\r\nimport axios from \"axios\"\r\n\r\nexport default function BookView(){\r\n\r\n    const [books, setBooks] = useState<Book[]>([])\r\n\r\n//     const books:Book[] =[\r\n//     {id:\"101\", title:\"Count of Monte Cristo\", author:\"Dumont\", isCheckedout:false, returnDate:0},\r\n//     {id:\"202\", title:\"The Stranger\", author:\"Albert Camus\", isCheckedout:false, returnDate:0},\r\n//     {id:\"303\", title:\"The Odyssey\", author:\"Homer\", isCheckedout:true, returnDate:0}\r\n// ]\r\n\r\n    async function getBooks() {\r\n        const response = await axios.get(\"http://8c58-50-110-89-213.ngrok.io/books\")\r\n        const myBooks = response.data\r\n        setBooks(myBooks)\r\n        \r\n    }\r\n    useEffect(()=>{\r\n        getBooks()\r\n\r\n    }, [])\r\n\r\n\r\n\r\n    return(<View>\r\n        <FlatList data={books} renderItem={({item})=>BookItem(item)} keyExtractor={item => item.id} />\r\n    </View>)\r\n}\r\n\r\nfunction BookItem(props:Book){\r\n\r\n    return(<View>\r\n        <Text> Title {props.title} Author {props.author}</Text>\r\n    </View>)\r\n}\r\n\r\n// function divide({dividend, divisor}){\r\n//     return dividend/divisor;\r\n// }\r\n\r\n// divide({dividend:45,divisor:3})"]},"metadata":{},"sourceType":"module"}